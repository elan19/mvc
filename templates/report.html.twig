{% extends "base.html.twig" %}

{% block title %}Report{% endblock %}

{% block body %}
    <h1>Report</h1>
    <div class="left report-big">
        <h3 id="kmom01">Kmom01</h3>
        <p>
            Sedan tidigare har jag jobbat en del med objektorientad programmering inom C++ och python men aldrig gjort något inom PHP så kommer bli interssant.
            Alltid roligt att lära sig nya områden och förhoppningsvis kunna ha använding av det jag lärt mig innan. Samt så blir det intressant att 
            använda sig av Json.
            En klass är en struktur som kodaren skapar med hjälp av medlemsvariabler och metoder och kan ses som en mall. 
            Sedan kan man skapa ett eller flera objekt av den klassen och använda dem i sitt program.
        </p>
        <p>
            Hittills tycker jag det verkar relativt lätt att följa med vad varje grej i kodbasen gör. Vi har våra olika Controllers som t.ex. Json och Twig
            controllerna. Twig controllern jobbar med själva "sidan" och returnerar till twig sidorna eller html sidorna som har en uppbyggnad för att
            användaren ska kunna se en "livad" sida med länkar, bilder, text med mera. Json controllern däremot returnerar bara till en sida som visar Json
            text och har då ingen "livad" sida runt omkring sig. Däremot tycker jag det är lite svårt att veta vad allting i Controller filerna gör
            och hur de fungerar. Men det lär jag mig nog mer allt eftersom man jobbar med det. 
        </p>
        <p>
            Har inte läst artikeln så kan tyvärr inte svara på den frågan. Men tycker om att man kan skapa sin egna lokala server direkt i terminalen utan
            krångel.
        </p>
        <p>
            Under detta kmom började jag lära mig om Json, då det är helt nytt för mig. Jag hoppas vi kommer använda oss mer om det då jag inte kan
            mycket om det området.
        </p>
        <h3 id="kmom02">Kmom02</h3>
        <p>Arv inom objektorientad programmering är att en klass ärver, utnyttjar, tidigare skriven kod från en annan klass. T.ex. om vi har Fordon
            som en klass och en annan klass Bil samt Buss så kan Bil ärva variabler samt funktioner från Fordon. Man kan då utnyttja arv för vissa saker
            som både Bil och Buss kommer ha gemensamt, som exempelvis däck. Komposition är att en klass 'äger' en annan klass och använder sig av
            den klassen. Man brukar kunna säga att klassen 'has a' situation. T.ex. där Car 'has' wheels eller Car 'has' brakes. I php finns inte
            multipel arv, utan istället använder programmering språket sig av trait, där man kan tänka sig att traitens kod 'kopieras' in i klassen,
            och kan vara återanvändbar. Interface är en slags kodstruktur eller liknande som innehåller ett en uppsättning kod eller metoder som
            man genom att implementera interfacet i en klass vet vilka metoder som finns i klassen samt vad man kan göra med klassen.

            Har själv inte använt mig av Trait eller Interface tidigare och tycker konceptet låter lite konstigt fortfarande. Men kanske löser sig
            ifall man börjar jobba med det.
        </p>
        <p>
            Jag började med att utgå från en grund som jag hade byggt upp till klasserna som behövdes. Därefter började jag med att koda fram webbsidorna
            stegvis, sida för sida och att få dem att fungera korrekt. Under tidens gång märke jag att jag behövde ha med lite mer funktioner
            och kunde då utan problem lägga till dem. Efter att webbsidan var helt klar valde jag att göra UML-diagrammet då jag visste att det inte
            tillkom några variabler eller funktioner. Tillsist gick jag vidare med att skapa Json sidorna och få dem att fungera korrekt. Utifrån mina
            erfarenheter inom området och sättet vi kodar på under kursen är jag nöjd med mina sidor. Tycker webbsidan är stilig och simpel, min kod samt
            klasser är enligt mig lätt att hitta runt i samt relativt beskrivande och med bra struktur.
        </p>
        <p>
            Tycker det var rätt intressant att programmera fram ett kortlek där man kan skapa kortlek, shuffla, dra kort samt visa kort man har dragit.
            Utifrån detta går det sedan att efterhand bygga ut hela kortspelet man har ifall man skulle vilja. Tycker även min tankearbete var relativit
            okej, men det är lättare sagt om sig själv.
        </p>
        <p>
            Under detta kmom måste jag ändå säga att sättet att bygga klasser och utnyttja dem i sin webbsida är det nya jag lärt mig, samt ökad
            information om hur controller delen och Json fungerar.
        </p>
        <h3 id="kmom03">Kmom03</h3>
        <p></p>
        <h3 id="kmom04">Kmom04</h3>
        <p></p>
    </div>
    <div class="right report-small sticky">
        <p><a href="#top">Top</a></p>
        <p><a href="#kmom01">Kmom01</a></p>
        <p><a href="#kmom02">Kmom02</a></p>
        <p><a href="#kmom03">Kmom03</a></p>
        <p><a href="#kmom04">Kmom04</a></p>
    </div>
{% endblock %}